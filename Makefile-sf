ifeq (,${README})
    README=README
endif
ifeq (,${PYTHON})
    PYTHON=python3
endif
NOTES=notes
CHANGES=changes
# Default can be overridden
ifeq (,${RELEASETOOLS})
    RELEASETOOLS=../releasetools
endif
RELEASENOTES=ReleaseNotes.txt
RELEASE:=$(shell echo $(LASTRELEASE) | sed -e 's/^V_//' -e 's/_/./g')
CSS:=$(RELEASETOOLS)/default.css
FRS=frs.sourceforge.net
MKCHLOG=${RELEASETOOLS}/mkchlog.py
FRESHMEAT=${RELEASETOOLS}/freshmeat.py
VERSIONSED:=sed -e 's/_/./g' -e 's/V\.//'
HOSTNAME=web.sourceforge.net
P1:=$(shell echo $(PACKAGE) | sed 's/^\(.\).*$$/\1/')
P2:=$(shell echo $(PACKAGE) | sed 's/^\(..\).*$$/\1/')
PROJECT_DOCDIR=/home/groups/$(P1)/$(P2)/$(PACKAGE)/htdocs
PACKAGE_DIR=/home/frs/project/$(PACKAGE)
PROJECT_RELEASEDIR=$(PACKAGE_DIR)/$(PACKAGE)
CLEAN=README.html MANIFEST ${CHANGES} ${NOTES} ${RELEASENOTES} \
    announce_pypi upload_pypi announce upload upload_homepage dist build

README.html: $(README) $(CSS)
	rst2html --stylesheet=$(CSS) $< > $@

$(NOTES): $(README)
	$(MKCHLOG) $(NOTES) < $(README) > $@

$(CHANGES): $(README)
	$(MKCHLOG) $(CHANGES) < $(README) > $@

$(RELEASENOTES): $(NOTES) $(CHANGES)
	echo Release Name: $(RELEASE)   > $@
	echo ""                        >> $@
	echo Notes:                    >> $@
	cat $(NOTES)                   >> $@
	echo ""                        >> $@
	echo Changes:                  >> $@
	cat $(CHANGES)                 >> $@

upload_homepage: all
	scp README.html \
            $(USERNAME),$(PROJECT)@$(FRS):$(PROJECT_DOCDIR)/index.html
	touch upload_homepage

announce_pypi: all
	$(PYTHON) setup.py register
	touch announce_pypi

upload_pypi: all dist
	$(PYTHON) setup.py sdist upload
	touch upload_pypi
	touch announce_pypi

upload: all $(RELEASENOTES) dist
	@echo Preparing Release $(RELEASE)
	ssh $(USERNAME),$(PROJECT)@shell.sourceforge.net create || true
	ssh $(USERNAME),$(PROJECT)@shell.sourceforge.net \
	    mkdir -p $(PROJECT_RELEASEDIR)/$(RELEASE) || true
	ssh $(USERNAME),$(PROJECT)@shell.sourceforge.net shutdown
	scp dist/* \
	    $(USERNAME),$(PROJECT)@$(FRS):$(PROJECT_RELEASEDIR)/$(RELEASE)
	scp $(RELEASENOTES) \
	    $(USERNAME),$(PROJECT)@$(FRS):$(PROJECT_RELEASEDIR)/$(RELEASE)/readme.txt
	scp $(README) \
	    $(USERNAME),$(PROJECT)@$(FRS):$(PROJECT_RELEASEDIR)/readme.rst
	scp $(README) \
	    $(USERNAME),$(PROJECT)@$(FRS):$(PACKAGE_DIR)/readme.rst
	touch upload

FOCUS:=$(shell $(MKCHLOG) sf-release-focus < $(README))
ifndef URL
URL:=$(shell $(PYTHON) setup.py --url)
endif
ifndef LICENSE
LICENSE:=$(shell $(PYTHON) setup.py --license | sed 's/Library or //')
endif

announce: all $(CHANGES) $(NOTES) dist
	 $(FRESHMEAT) -t "$(FOCUS)" $(PROJECT) $(NOTES) "$(RELEASE)"
	 touch announce

license:
	@echo "$(LICENSE)"

version:
	@echo "$(RELEASE)"

$(VERSIONPY): $(SRC)
	echo 'VERSION="$(LASTRELEASE)"' | $(VERSIONSED) > $@

$(VERSIONH): $(SRC)
	echo '#define VERSION "$(LASTRELEASE)"' | $(VERSIONSED) > $@
